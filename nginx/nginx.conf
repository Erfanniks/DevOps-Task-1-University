events {
  worker_connections 1024;
}

http {
  upstream service1_backend {
    server service1:8199; # This will route to any service1 container instance in the network
  }

  server {
    listen 8081;

    # Basic Authentication
    auth_basic "Restricted Content";
    auth_basic_user_file /etc/nginx/.htpasswd;

    # Serve HTML interface at root
    location / {
      root /usr/share/nginx/html; # Ensure this is where index.html is located
      index index.html;
      try_files $uri /index.html;
    }

    # Route requests to /service1 to the load-balanced backend
    location /service1 {
      proxy_pass http://service1_backend/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # If you have an endpoint for /stop, define it here
    location /stop {
      # Proxy pass or redirect to your intended service/route
      # For example, to service1 directly:
      proxy_pass http://service1_backend/stop;
    }
  }
}
