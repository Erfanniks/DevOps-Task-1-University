events {
    worker_connections 1024;
}

http {
    upstream service1_backend {
        server service1:8199;  # Load balance to Service 1 instances
    }

    server {
        listen 8198;  # Change to 8198 per the project requirement

        # Basic Authentication
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # Serve the HTML interface at root
        location / {
            root /usr/share/nginx/html;  # Ensure index.html is located here
            index index.html;
            try_files $uri /index.html;
        }

        # Route requests to /service1 to the load-balanced Service 1 backend
        location /service1 {
            proxy_pass http://service1_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /stop requests to the Service 1 backend stop endpoint
        location /stop {
            proxy_pass http://service1_backend/stop;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
